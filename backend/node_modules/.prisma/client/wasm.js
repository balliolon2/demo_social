
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RepliesScalarFieldEnum = {
  replie_id: 'replie_id',
  thread_id: 'thread_id',
  user_id: 'user_id',
  parent_id: 'parent_id',
  body: 'body',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ThreadsScalarFieldEnum = {
  thread_id: 'thread_id',
  user_id: 'user_id',
  title: 'title',
  body: 'body',
  is_locked: 'is_locked',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  username: 'username',
  email: 'email',
  pass_hash: 'pass_hash',
  role: 'role',
  created_at: 'created_at',
  last_login_at: 'last_login_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.repliesOrderByRelevanceFieldEnum = {
  body: 'body'
};

exports.Prisma.threadsOrderByRelevanceFieldEnum = {
  title: 'title',
  body: 'body'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  pass_hash: 'pass_hash'
};
exports.users_role = exports.$Enums.users_role = {
  user: 'user',
  admin: 'admin'
};

exports.Prisma.ModelName = {
  replies: 'replies',
  threads: 'threads',
  users: 'users'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/balliolon/Documents/demo_social/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/balliolon/Documents/demo_social/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel replies {\n  replie_id     Int       @id @default(autoincrement())\n  thread_id     Int\n  user_id       Int\n  parent_id     Int?\n  body          String    @db.MediumText\n  is_deleted    Boolean   @default(false)\n  created_at    DateTime  @default(now()) @db.DateTime(0)\n  updated_at    DateTime? @db.DateTime(0)\n  threads       threads   @relation(fields: [thread_id], references: [thread_id], onDelete: Cascade, onUpdate: NoAction, map: \"replies_ibfk_1\")\n  users         users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: \"replies_ibfk_2\")\n  replies       replies?  @relation(\"repliesToreplies\", fields: [parent_id], references: [replie_id], onUpdate: NoAction, map: \"replies_ibfk_3\")\n  other_replies replies[] @relation(\"repliesToreplies\")\n\n  @@index([parent_id], map: \"parent_id\")\n  @@index([thread_id], map: \"thread_id\")\n  @@index([user_id], map: \"user_id\")\n}\n\nmodel threads {\n  thread_id  Int       @id @default(autoincrement())\n  user_id    Int\n  title      String    @db.VarChar(200)\n  body       String    @db.MediumText\n  is_locked  Boolean   @default(false)\n  is_deleted Boolean   @default(false)\n  created_at DateTime  @default(now()) @db.DateTime(0)\n  updated_at DateTime? @db.DateTime(0)\n  replies    replies[]\n  users      users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: \"threads_ibfk_1\")\n\n  @@index([user_id], map: \"user_id\")\n}\n\nmodel users {\n  user_id       Int        @id @default(autoincrement())\n  username      String     @unique(map: \"username\") @db.VarChar(32)\n  email         String?    @unique(map: \"email\") @db.VarChar(255)\n  pass_hash     String     @db.VarChar(255)\n  role          users_role @default(user)\n  created_at    DateTime   @default(now()) @db.DateTime(0)\n  last_login_at DateTime?  @db.DateTime(0)\n  replies       replies[]\n  threads       threads[]\n}\n\nenum users_role {\n  user\n  admin\n}\n",
  "inlineSchemaHash": "314f90a0608023e9348cbce84d73759fb61ed3889dd250334cb1a00de1e90d5a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"replies\":{\"fields\":[{\"name\":\"replie_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"thread_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parent_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"threads\",\"kind\":\"object\",\"type\":\"threads\",\"relationName\":\"repliesTothreads\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"repliesTousers\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"replies\",\"relationName\":\"repliesToreplies\"},{\"name\":\"other_replies\",\"kind\":\"object\",\"type\":\"replies\",\"relationName\":\"repliesToreplies\"}],\"dbName\":null},\"threads\":{\"fields\":[{\"name\":\"thread_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_locked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"replies\",\"relationName\":\"repliesTothreads\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"threadsTousers\"}],\"dbName\":null},\"users\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pass_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"users_role\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"last_login_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"replies\",\"relationName\":\"repliesTousers\"},{\"name\":\"threads\",\"kind\":\"object\",\"type\":\"threads\",\"relationName\":\"threadsTousers\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

